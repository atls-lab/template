name: Publisher

on:
  pull_request:
    types: [closed]
    branches:
      - master

jobs:
  run:
    name: Publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: master
        if: >
          github.event.pull_request.merged == true &&
          github.event.pull_request.base.ref == 'master' &&
          !startsWith(github.event.pull_request.head.ref, 'renovate/')

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14'
          registry-url: 'https://npm.pkg.github.com'
        if: >
          github.event.pull_request.merged == true &&
          github.event.pull_request.base.ref == 'master' &&
          !startsWith(github.event.pull_request.head.ref, 'renovate/')

      - name: Install
        run: yarn install
        if: >
          github.event.pull_request.merged == true &&
          github.event.pull_request.base.ref == 'master' &&
          !startsWith(github.event.pull_request.head.ref, 'renovate/')

      - name: Configure GPG Key
        run: |
          mkdir -p ~/.gnupg/
          printf "$GPG_SIGNING_KEY" | base64 --decode > ~/.gnupg/private.key
          gpg --import ~/.gnupg/private.key
        env:
          GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
        if: >
          github.event.pull_request.merged == true &&
          github.event.pull_request.base.ref == 'master' &&
          !startsWith(github.event.pull_request.head.ref, 'renovate/')

      - name: Configure Git User
        run: |
          git config --local user.email $GIT_EMAIL
          git config --local user.name $GIT_USER
          git config --local user.signingkey $GPG_KEY_ID
          git config --local commit.gpgsign true
        env:
          GIT_USER: ${{ secrets.GIT_USER }}
          GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID}}
        if: >
          github.event.pull_request.merged == true &&
          github.event.pull_request.base.ref == 'master' &&
          !startsWith(github.event.pull_request.head.ref, 'renovate/')

      - name: Release
        run: |
          yarn lerna version --no-git-tag-version --yes
          git add .
          git commit -m 'chore(release): %s'
          git push
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        if: >
          github.event.pull_request.merged == true &&
          github.event.pull_request.base.ref == 'master'
          !startsWith(github.event.pull_request.head.ref, 'renovate/')

      - name: Publish to NPM
        run: yarn lerna publish from-package --no-verify-access --yes
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        if: >
          github.event.pull_request.merged == true &&
          github.event.pull_request.base.ref == 'master'
          !startsWith(github.event.pull_request.head.ref, 'renovate/')

      - name: Github Registry
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: ${{ secrets.SCOPE }}
        if: >
          github.event.pull_request.merged == true &&
          github.event.pull_request.base.ref == 'master'
          !startsWith(github.event.pull_request.head.ref, 'renovate/')

      - name: Publish to Github Registry
        run: yarn lerna publish from-package --no-verify-access --yes
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
        if: >
          github.event.pull_request.merged == true &&
          github.event.pull_request.base.ref == 'master'
          !startsWith(github.event.pull_request.head.ref, 'renovate/')
